// <auto-generated />
using System;
using Entities;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace EFCoreApp.Migrations
{
    [DbContext(typeof(ApplicationContext))]
    [Migration("20190611092219_AddedDeletedPropertyToStudent")]
    partial class AddedDeletedPropertyToStudent
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.2.4-servicing-10062")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("Entities.Evaluation", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("EvaluationId");

                    b.Property<string>("AdditionalExplanation");

                    b.Property<int>("Grade");

                    b.Property<Guid>("StudentId");

                    b.HasKey("Id");

                    b.HasIndex("StudentId");

                    b.ToTable("Evaluation");

                    b.HasData(
                        new
                        {
                            Id = new Guid("2182ea19-2a58-4195-b431-5bfea285d8fc"),
                            AdditionalExplanation = "First test...",
                            Grade = 5,
                            StudentId = new Guid("660ed4cd-1361-4216-9faa-9636e4df681a")
                        },
                        new
                        {
                            Id = new Guid("60249811-7310-45b2-b5de-083e6028ffea"),
                            AdditionalExplanation = "Second test...",
                            Grade = 4,
                            StudentId = new Guid("660ed4cd-1361-4216-9faa-9636e4df681a")
                        },
                        new
                        {
                            Id = new Guid("baa449fb-2466-47dd-809a-061e30c91b53"),
                            AdditionalExplanation = "First test...",
                            Grade = 3,
                            StudentId = new Guid("410c14e3-e6df-45b8-8c6f-1e19aed675ac")
                        },
                        new
                        {
                            Id = new Guid("2f2ec637-4601-4bec-b0b1-f42271368596"),
                            AdditionalExplanation = "Last test...",
                            Grade = 2,
                            StudentId = new Guid("4addc421-0937-45cb-b55c-200b45c6caca")
                        });
                });

            modelBuilder.Entity("Entities.Student", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("StudentId");

                    b.Property<int?>("Age");

                    b.Property<bool>("Deleted");

                    b.Property<bool>("IsRegularStudent")
                        .ValueGeneratedOnAdd()
                        .HasDefaultValue(true);

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50);

                    b.HasKey("Id");

                    b.ToTable("Student");

                    b.HasData(
                        new
                        {
                            Id = new Guid("660ed4cd-1361-4216-9faa-9636e4df681a"),
                            Age = 30,
                            Deleted = false,
                            IsRegularStudent = false,
                            Name = "John Doe"
                        },
                        new
                        {
                            Id = new Guid("410c14e3-e6df-45b8-8c6f-1e19aed675ac"),
                            Age = 25,
                            Deleted = false,
                            IsRegularStudent = false,
                            Name = "Jane Doe"
                        },
                        new
                        {
                            Id = new Guid("4addc421-0937-45cb-b55c-200b45c6caca"),
                            Age = 28,
                            Deleted = false,
                            IsRegularStudent = false,
                            Name = "Mike Miles"
                        });
                });

            modelBuilder.Entity("Entities.StudentDetails", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("StudentDetailsId");

                    b.Property<string>("AdditionalInformation");

                    b.Property<string>("Address");

                    b.Property<Guid>("StudentId");

                    b.HasKey("Id");

                    b.HasIndex("StudentId")
                        .IsUnique();

                    b.ToTable("StudentDetails");
                });

            modelBuilder.Entity("Entities.StudentSubject", b =>
                {
                    b.Property<Guid>("StudentId");

                    b.Property<Guid>("SubjectId");

                    b.HasKey("StudentId", "SubjectId");

                    b.HasIndex("SubjectId");

                    b.ToTable("StudentSubject");

                    b.HasData(
                        new
                        {
                            StudentId = new Guid("660ed4cd-1361-4216-9faa-9636e4df681a"),
                            SubjectId = new Guid("7e69e207-5131-4791-9064-57f6d3c47fc8")
                        },
                        new
                        {
                            StudentId = new Guid("660ed4cd-1361-4216-9faa-9636e4df681a"),
                            SubjectId = new Guid("89fc9e5d-74f6-4d2e-ae82-76f2b1decce7")
                        },
                        new
                        {
                            StudentId = new Guid("660ed4cd-1361-4216-9faa-9636e4df681a"),
                            SubjectId = new Guid("9e5f12c2-0aa2-49b0-9db2-7df40fecf9ad")
                        },
                        new
                        {
                            StudentId = new Guid("410c14e3-e6df-45b8-8c6f-1e19aed675ac"),
                            SubjectId = new Guid("fee204f4-a51d-44bb-a3d7-dcc2b5ee5d4f")
                        },
                        new
                        {
                            StudentId = new Guid("410c14e3-e6df-45b8-8c6f-1e19aed675ac"),
                            SubjectId = new Guid("7e69e207-5131-4791-9064-57f6d3c47fc8")
                        },
                        new
                        {
                            StudentId = new Guid("4addc421-0937-45cb-b55c-200b45c6caca"),
                            SubjectId = new Guid("fee204f4-a51d-44bb-a3d7-dcc2b5ee5d4f")
                        });
                });

            modelBuilder.Entity("Entities.Subject", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("SubjectId");

                    b.Property<string>("SubjectName");

                    b.HasKey("Id");

                    b.ToTable("Subject");

                    b.HasData(
                        new
                        {
                            Id = new Guid("7e69e207-5131-4791-9064-57f6d3c47fc8"),
                            SubjectName = "Math"
                        },
                        new
                        {
                            Id = new Guid("89fc9e5d-74f6-4d2e-ae82-76f2b1decce7"),
                            SubjectName = "English"
                        },
                        new
                        {
                            Id = new Guid("9e5f12c2-0aa2-49b0-9db2-7df40fecf9ad"),
                            SubjectName = "History"
                        },
                        new
                        {
                            Id = new Guid("fee204f4-a51d-44bb-a3d7-dcc2b5ee5d4f"),
                            SubjectName = "Computer Science"
                        });
                });

            modelBuilder.Entity("Entities.Evaluation", b =>
                {
                    b.HasOne("Entities.Student", "Student")
                        .WithMany("Evaluations")
                        .HasForeignKey("StudentId")
                        .OnDelete(DeleteBehavior.Restrict);
                });

            modelBuilder.Entity("Entities.StudentDetails", b =>
                {
                    b.HasOne("Entities.Student", "Student")
                        .WithOne("StudentDetails")
                        .HasForeignKey("Entities.StudentDetails", "StudentId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("Entities.StudentSubject", b =>
                {
                    b.HasOne("Entities.Student", "Student")
                        .WithMany("StudentSubjects")
                        .HasForeignKey("StudentId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("Entities.Subject", "Subject")
                        .WithMany("StudentSubjects")
                        .HasForeignKey("SubjectId")
                        .OnDelete(DeleteBehavior.Cascade);
                });
#pragma warning restore 612, 618
        }
    }
}
